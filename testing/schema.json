{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "RawConfiguration",
  "description": "User configuration.",
  "type": "object",
  "required": [
    "metadata",
    "mssql_connection_string",
    "version"
  ],
  "properties": {
    "version": {
      "type": "integer",
      "format": "uint32",
      "minimum": 0.0
    },
    "mssql_connection_string": {
      "$ref": "#/definitions/ConnectionUri"
    },
    "metadata": {
      "$ref": "#/definitions/Metadata"
    }
  },
  "definitions": {
    "ConnectionUri": {
      "$ref": "#/definitions/Secret"
    },
    "Secret": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "required": [
            "variable"
          ],
          "properties": {
            "variable": {
              "$ref": "#/definitions/Variable"
            }
          }
        }
      ]
    },
    "Variable": {
      "description": "The name of an an environment variable.",
      "type": "string"
    },
    "Metadata": {
      "description": "Metadata information.",
      "type": "object",
      "properties": {
        "tables": {
          "default": {},
          "allOf": [
            {
              "$ref": "#/definitions/TablesInfo"
            }
          ]
        },
        "nativeQueries": {
          "default": {},
          "allOf": [
            {
              "$ref": "#/definitions/NativeQueries"
            }
          ]
        },
        "aggregateFunctions": {
          "default": {},
          "allOf": [
            {
              "$ref": "#/definitions/AggregateFunctions"
            }
          ]
        },
        "comparisonOperators": {
          "default": {},
          "allOf": [
            {
              "$ref": "#/definitions/ComparisonOperators"
            }
          ]
        }
      }
    },
    "TablesInfo": {
      "description": "Mapping from a \"table\" name to its information.",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/TableInfo"
      }
    },
    "TableInfo": {
      "description": "Information about a database table (or any other kind of relation).",
      "type": "object",
      "required": [
        "columns",
        "schemaName",
        "tableName"
      ],
      "properties": {
        "schemaName": {
          "type": "string"
        },
        "tableName": {
          "type": "string"
        },
        "columns": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ColumnInfo"
          }
        },
        "uniquenessConstraints": {
          "default": {},
          "allOf": [
            {
              "$ref": "#/definitions/UniquenessConstraints"
            }
          ]
        },
        "foreignRelations": {
          "default": {},
          "allOf": [
            {
              "$ref": "#/definitions/ForeignRelations"
            }
          ]
        },
        "description": {
          "default": null,
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "ColumnInfo": {
      "description": "Information about a database column.",
      "type": "object",
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/ScalarType"
        },
        "nullable": {
          "default": "nullable",
          "allOf": [
            {
              "$ref": "#/definitions/Nullable"
            }
          ]
        },
        "description": {
          "default": null,
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "ScalarType": {
      "description": "The scalar types supported by the Engine.",
      "type": "string"
    },
    "Nullable": {
      "description": "Can this column contain null values",
      "type": "string",
      "enum": [
        "nullable",
        "nonNullable"
      ]
    },
    "UniquenessConstraints": {
      "description": "A mapping from the name of a unique constraint to its value.",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/UniquenessConstraint"
      }
    },
    "UniquenessConstraint": {
      "description": "The set of columns that make up a uniqueness constraint.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "uniqueItems": true
    },
    "ForeignRelations": {
      "description": "A mapping from the name of a foreign key constraint to its value.",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/ForeignRelation"
      }
    },
    "ForeignRelation": {
      "description": "A foreign key constraint.",
      "type": "object",
      "required": [
        "columnMapping",
        "foreignTable"
      ],
      "properties": {
        "foreignTable": {
          "type": "string"
        },
        "columnMapping": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "NativeQueries": {
      "description": "Metadata information of native queries.",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/NativeQueryInfo"
      }
    },
    "NativeQueryInfo": {
      "description": "Information about a Native Query",
      "type": "object",
      "required": [
        "columns",
        "sql"
      ],
      "properties": {
        "sql": {
          "description": "SQL expression to use for the Native Query. We can interpolate values using `{{variable_name}}` syntax, such as `SELECT * FROM authors WHERE name = {{author_name}}`",
          "allOf": [
            {
              "$ref": "#/definitions/Native_query_sql"
            }
          ]
        },
        "columns": {
          "description": "Columns returned by the Native Query",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ColumnInfo"
          }
        },
        "arguments": {
          "description": "Names and types of arguments that can be passed to this Native Query",
          "default": {},
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ColumnInfo"
          }
        },
        "description": {
          "default": null,
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "Native_query_sql": {
      "type": "string"
    },
    "AggregateFunctions": {
      "description": "All supported aggregate functions, grouped by type.",
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/definitions/AggregateFunction"
        }
      }
    },
    "AggregateFunction": {
      "type": "object",
      "required": [
        "returnType"
      ],
      "properties": {
        "returnType": {
          "$ref": "#/definitions/ScalarType"
        }
      }
    },
    "ComparisonOperators": {
      "description": "The complete list of supported binary operators for scalar types. Not all of these are supported for every type.",
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/definitions/ComparisonOperator"
        }
      }
    },
    "ComparisonOperator": {
      "description": "Represents a postgres binary comparison operator",
      "type": "object",
      "required": [
        "argumentType",
        "operatorKind",
        "operatorName"
      ],
      "properties": {
        "operatorName": {
          "type": "string"
        },
        "argumentType": {
          "$ref": "#/definitions/ScalarType"
        },
        "operatorKind": {
          "$ref": "#/definitions/OperatorKind"
        }
      }
    },
    "OperatorKind": {
      "description": "Is it a built-in operator, or a custom operator.",
      "type": "string",
      "enum": [
        "equal",
        "in",
        "custom"
      ]
    }
  }
}
